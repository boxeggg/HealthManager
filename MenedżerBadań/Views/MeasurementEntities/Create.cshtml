@using HealthManager.Models.ViewModels;
@model MeasurementsViewModel


@{
    ViewData["Title"] = "Create";
}

<h1>Utwórz nowy pomiar</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <input type="hidden" asp-for="UserId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DateTime" class="control-label"> Data Pomiaru</label>
                <input asp-for="DateTime" class="form-control" />
                <span asp-validation-for="DateTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name"> Typ Badania</label>
                <select asp-for="Name" class="form-control">
                    @foreach (var value in Enum.GetValues(typeof(HealthManager.Data.Entities.BodyMeasure)))
                    {
                        <option value="@value">@value</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label"> Komentarz</label>
                <input asp-for="Comment" class="form-control" />
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Value" class="control-label"> Wartość </label>
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index"> Powrót </a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
